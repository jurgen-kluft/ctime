#ifndef __X_TIME_H__
#define __X_TIME_H__
#include "xbase\x_target.h"
#ifdef USE_PRAGMA_ONCE 
#pragma once 
#endif

//==============================================================================
//  INCLUDES
//==============================================================================
#include "xbase\x_types.h"

//==============================================================================
// xCore namespace
//==============================================================================
namespace xcore
{
	//==============================================================================
	// Library initialization
	//==============================================================================
	extern void    x_TimeInit (void);
	extern void    x_TimeExit (void);

	//==============================================================================
	// GLOBAL FUNCTIONS
	//==============================================================================

	//==============================================================================
	// Types
	//==============================================================================
	typedef		s64		xtick;

	class xtime_source
	{
	public:
		virtual xtick	getTimeInTicks() = 0;
		virtual s64		getTicksPerMilliSecond() = 0;
		virtual s64		getTicksPerSecond() = 0;
	};
	extern void		x_SetTimeSource		(xtime_source*);

	extern f64		x_GetTimeSec        (void);
	extern s64		x_GetTicksPerMs     (void);
	extern s64		x_GetTicksPerSecond (void);

	extern xtick	x_GetTime           (void);
	extern f64		x_TicksToMs         (xtick inTicks);
	extern f64		x_TicksToSec        (xtick inTicks);

	//==============================================================================
	// INLINE
	//==============================================================================
	#include "private/x_time_inline.h"


	//==============================================================================
	// END xCore namespace
	//==============================================================================
};


//==============================================================================
// END __X_TIME_H__
//==============================================================================
#endif
